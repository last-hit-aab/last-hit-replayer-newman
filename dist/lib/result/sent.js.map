{"version":3,"sources":["../lib/result/sent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oCAA2C;AAC3C,kCAAmC;AACnC,gDAA0B;AAC1B,+BAAqC;AAErC,IAAM,SAAS,GAAG,UAAC,OAAkF;IACpG,IAAM,WAAW,GAAG,YAAI,CAAC,WAAqB,CAAC;IAC/C,IAAM,UAAU,GAAG,YAAI,CAAC,UAAoB,CAAC;IAC7C,IAAI,WAAW,EAAE;QAChB,OAAO;YACN,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE;gBACV,EAAE,EAAE,WAAW;aACf;SACD,CAAC;KACF;SAAM,IAAI,UAAU,EAAE;QACtB,OAAO;YACN,eAAe;YACf,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE;gBACT,EAAE,EAAE,UAAU;aACd;SACD,CAAC;KACF;SAAM;QACN,OAAO;YACN,eAAe;YACf,OAAO,EAAE,OAAO;SAIhB,CAAC;KACF;AACF,CAAC,CAAC;AAEW,QAAA,YAAY,GAAG,UAC3B,OAAkF;;;;oBAEjE,qBAAM,uBAAc,EAAE,EAAA;;gBAAjC,QAAQ,GAAG,SAAsB;qBACnC,QAAQ,EAAR,wBAAQ;gBACL,IAAI,GAAG,eAAO,CAAC,UAAU,CAAC,CAAC;;;;gBAEf,qBAAM,eAAK,CAAC,IAAI,CAAI,QAAQ,0BAAuB,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,EAAA;;gBAAnF,QAAQ,GAAG,SAAwE;gBAEzF,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;;;gBAE7B,OAAO,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;gBACxD,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;;;;gBAGlB,OAAO,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;;;;;KAExD,CAAC","file":"sent.js","sourcesContent":["import { assertAdminURL } from \"../config\";\nimport { endTime } from \"../utils\";\nimport axios from \"axios\";\nimport { argv as args } from \"yargs\";\n\nconst buildBody = (results: { fileName: string; storyName: string; flowName: string; json: string }[]) => {\n\tconst workspaceId = args.workspaceId as number;\n\tconst testPlanId = args.testPlanId as number;\n\tif (workspaceId) {\n\t\treturn {\n\t\t\tsummary: results,\n\t\t\tworkspace: {\n\t\t\t\tid: workspaceId,\n\t\t\t},\n\t\t};\n\t} else if (testPlanId) {\n\t\treturn {\n\t\t\t// spent: used,\n\t\t\tsummary: results,\n\t\t\ttestPlan: {\n\t\t\t\tid: testPlanId,\n\t\t\t},\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\t// spent: used,\n\t\t\tsummary: results,\n\t\t\t// testPlan: {\n\t\t\t// \tid: testPlanId,\n\t\t\t// },\n\t\t};\n\t}\n};\n\nexport const sentToServer = async (\n\tresults: { fileName: string; storyName: string; flowName: string; json: string }[]\n) => {\n\tconst adminUrl = await assertAdminURL();\n\tif (adminUrl) {\n\t\tconst used = endTime(\"all-used\");\n\t\ttry {\n\t\t\tconst response = await axios.post(`${adminUrl}/openapi/api/test_run`, buildBody(results));\n\n\t\t\tconsole.log(response.status);\n\t\t} catch (e) {\n\t\t\tconsole.error(\"failed to push summary to admin server\");\n\t\t\tconsole.error(e);\n\t\t}\n\t} else {\n\t\tconsole.info(\"failed to push summary to admin server\");\n\t}\n};\n"]}